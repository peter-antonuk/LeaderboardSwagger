---
openapi: 3.0.2
info:
  title: Leaderboard API
  description: Leaderboard service for seeing who the top scorers are in a game
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
    description: Main local server
paths:
  /leaderboard:
    get:
      summary: Returns the top scorers across every game and no specification on timeframe.
      responses:
        '500':    # status code
          description: An error occurred during processing.
        '200':    # status code
          description: A JSON array of Leaderboard objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  leaderboards:
                    type: array
                    items:
                      $ref: '#/components/schemas/Leaderboard'
                
  /leaderboard/{gameId}:
    get:
      summary: Returns top scorers for a particular game and no specification on timeframe.
      responses:
        '500':    # status code
          description: An error occurred during processing.
        '200':    # status code
          description: A JSON array of leaderboard objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  leaderboards:
                    type: array
                    items:
                      $ref: '#/components/schemas/Leaderboard'
  /leaderboard/{gameId}/{dateRange}:
    get:
      summary: Returns top scorers for a particular game between a date range.
      responses:
        '500':    # status code
          description: An error occurred during processing.
        '200':    # status code
          description: A JSON array of Leaderboard objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  leaderboards:
                    type: array
                    items:
                      $ref: '#/components/schemas/Leaderboard'
  /achievements:
    post:
      summary: Accepts an achievement in the form of a JSON object, and saves it to the database.
      responses:
        '500':    # status code
          description: An error occurred during processing.
        '201':    # status code
          description: Achievements were created
  /achievements/{startDate}/{endDate}:
    get:
      summary: Returns a breakdown of an achievement and highlights various data points around it.
      description: Breakdown that highlights data points about achievements from a few different categories; frequency, first occurrence, last occurrence, number of times earned by players.
      responses:
        '500':    # status code
          description: An error occurred during processing.
        '200':    # status code
          description: A JSON array of achievements and supporting data
          content:
            application/json:
              schema:
                type: object
                properties:
                  achievement_breakdown:
                    type: array
                    items:
                      $ref: '#/components/schemas/AchievementBreakdown'
  /achievements/{achievementId}/{startDate}/{endDate}:
    get:
      summary: Returns the number of times a particular achievement has been earned for each day within the specified range.
      responses:
        '500':    # status code
          description: An error occurred during processing.
        '200':    # status code
          description: Number of times an achievement was earned.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  achievement:
                    type: string
                    description: The code for the achievement.
                  occurrences:
                    type: array
                    items:
                      $ref: '#/components/schemas/DateFrequency'
  /achievements/game/{gameId}/{startDate}/{endDate}:
    get:
      summary: Returns a list of the different achievements earned by players in a game over a specific date range.
      responses:
        '500':    # status code
          description: An error occurred during processing.
        '200':    # status code
          description: A JSON array of achievements
          content:
            application/json:
              schema:
                type: object
                properties:
                  game:
                    type: string
                    description: The game the metrics are being calculated for.
                  occurrences:
                    type: array
                    items:
                      $ref: '#/components/schemas/AchievementFrequency'
  /players:
    post:
      summary: Accepts a list of player information and stores it into the database.
      description: Processes the player data sent in the form of JSON or CSV, and tries to store it in the database. In the event of an error, a list of objects will be returned for ones that couldn't be processed.
      responses:
        '500':    # status code
          description: An error occurred during processing.
        '201':    # status code
          description: Players were successfully added.
  /players/{username}:
    get:
      summary: Returns a chronological list of every achievement ever earned by a player.
      description: Returns evrey achievement ever earned by a player in the order they achieved them. Also accepts an optional query parameter of a gameId to filter the results.
      parameters:
        - name: game
          in: query
          required: false
          description: Optional parameter to further filter on a secific game
          schema:
            type : string
      responses:
        '500':    # status code
          description: An error occurred during processing.
        '200':    # status code
          description: A JSON array of achievements.
          content:
            application/json:
              schema:
                type: object
                properties:
                  achievements:
                    type: array
                    items:
                      $ref: '#/components/schemas/Achievement'
  /players/{username}/{achievementId}:
    get:
      summary: Returns a date that the player earned a particular achievement.
      responses:
        '500':    # status code
          description: An error occurred during processing.
        '200':    # status code
          description: A string representing a date
          content:
            application/json:
              schema: 
                type: string
                format: date-time

components:
  schemas:
    Leaderboard:
      type: object
      properties:
        game:
          type: string
          description: The game for the particular leaderboard which highscores are being displayed for.
        timeframe:
          type: object
          description: A date range indicating the scope for which the leaderboard statistics were calculated.
          properties:
            start_date:
              type: string
              format: date-time
            end_date:
              type: string
              format: date-time
        topScorers:
          type: array
          items:
            $ref: '#/components/schemas/TopScore'
    TopScore:
      type: object
      description: An object representing one of the top scores for a game
      properties:
        player:
          type: string
          description: The username of the player
        score:
          type: integer
          description: Score the player has earned for a game
    DateFrequency:
      type: object
      description: An object representing a date, and the number of times an achieved occurred that day.
      properties:
        date:
          type: string
          format: date
        frequency:
          type: integer
    AchievementFrequency:
      type: object
      description: An object representing a date, and the number of times an achieved occurred that day.
      properties:
        achievement_code:
          type: string
          description: The achievement code
        frequency:
          type: integer
    AchievementBreakdown:
      type: object
      description: A breakdown of different matrics about achievements within a specified date range.
      properties:
        achievement_code:
          type: string
          description: The achievement code
        first_occurrence:
          type: string
          format: date
          description: The date which the first time the achievement occurred.
        last_occurrence:
          type: string
          format: date
          description: The the most recent occu of the achievement.
        frequency:
          type: integer
          description: The number of times the achievement occurred.
        player_count:
          type: integer
          description: The number of unique players who earned the achievement.
    Achievement:
      type: object
      description: A JSON object representing an achievement earned by a player.
      properties:
        achievement_dt:
          type: string
          format: date-time
        player:
          type: string
          description: The player who earned the achievement.
        game:
          type: string
          description: The game which the achievement was earned on.
        achievement_code:
          type: string
          description: The achievement code.
